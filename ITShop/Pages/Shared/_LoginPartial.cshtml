@using Microsoft.AspNetCore.Identity

@inject SignInManager<Core.ApplicationUser> SignInManager
@inject UserManager<Core.ApplicationUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" >Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-light">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item" style="color:#28a745">
                <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fa fa-user-plus" style="color:#28a745; margin-right:2px"></i>Sign Up</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fa fa-user-check" style="color:#28a745; margin-right:2px"></i>Login</a>
            </li>
        }
    </ul>
